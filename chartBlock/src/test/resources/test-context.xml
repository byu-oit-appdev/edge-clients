<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:c="http://www.springframework.org/schema/c"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:annotation-config />
	<context:property-placeholder location="file:${user.home}/basic-oauth-tester.properties"/>

	<bean id="accountCodeValidationClient" class="edu.byu.chartblock.impl.AccountCodeValidationImpl"
		  c:baseUrl="https://ws.byu.edu/soap/v2.0/generalledger/controls/chartblock"
		  c:filter-ref="tokenFilter"
		  c:readTimeout="10000"/>

	<bean id="tokenFilter" class="edu.byu.wso2.filter.jersey.JerseyOutboundOauthTokenFilter"
		  c:tokenHeaderProvider-ref="tokenHeaderProvider"/>

	<bean id="tokenHeaderProvider" class="edu.byu.wso2.core.provider.ClientCredentialsTokenHeaderProvider"
		  c:clientCredentialsTokenProvider-ref="tokenProvider" />

	<bean id="tokenProvider" class="edu.byu.wso2.core.provider.ClientCredentialOauthTokenProvider"
		  c:wso2Credentials-ref="wso2Credentials"/>

	<bean id="wso2Credentials" class="edu.byu.wso2.core.Wso2Credentials"
		  c:clientId="${client_id}"
		  c:clientSecret="${client_secret}"/>

	<!--<import resource="classpath:/wsAuthentication-core-dao-config.xml" />-->
	<!--&lt;!&ndash;<import resource="classpath:/wsAuthentication-hibernate-config.xml" />&ndash;&gt;-->

	<!--<bean id="wsAuthenticationSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"-->
			<!--p:dataSource-ref="wsAuthenticationDataSource"-->
			<!--p:mappingLocations="classpath:edu/byu/ws/authentication/domain/*.hbm.xml">-->
		<!--<qualifier value="wsAuthentication" />-->
		<!--<property name="hibernateProperties">-->
			<!--<props>-->
				<!--<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>-->
				<!--<prop key="hibernate.cache.use_query_cache">false</prop>-->
				<!--<prop key="hibernate.cache.use_second_level_cache">false</prop>-->

				<!--<prop key="hibernate.show_sql">false</prop>-->
				<!--<prop key="hibernate.max_fetch_depth">1</prop>-->
				<!--<prop key="hibernate.default_batch_fetch_size">16</prop>-->
				<!--<prop key="hibernate.order_updates">true</prop>-->
				<!--<prop key="connection.release_mode">after_statement</prop>-->
			<!--</props>-->
		<!--</property>-->
	<!--</bean>-->

	<!--<bean id="wsAuthenticationTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"-->
			<!--p:dataSource-ref="wsAuthenticationDataSource" p:sessionFactory-ref="wsAuthenticationSessionFactory" />-->

	<!--<bean id="wsAuthenticationDataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
			<!--p:url="jdbcs[byu@PROD]" p:driverClassName="edu.byu.jdbc.SecureDriver"-->
			<!--p:initialSize="2" p:maxActive="5" p:maxIdle="5" p:minIdle="1"-->
			<!--p:testWhileIdle="true" p:testOnBorrow="true" p:testOnReturn="true"-->
			<!--p:validationQuery="select 1 from dual" />-->
</beans>
